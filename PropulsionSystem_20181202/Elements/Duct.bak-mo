within PropulsionSystem.Elements;

model Duct
  extends PropulsionSystem.BaseClasses.PartialElementTwoPorts;
  import Modelica.Constants;
  import PropulsionSystem.Types.switches;
  import PropulsionSystem.Subelements;
  
  /********************************************************
   Declaration
  ********************************************************/
  //********** Package **********
  //##### none #####
  
  
  //********** Parameters **********
  parameter Boolean use_dPqP_in= false
    ""
    annotation(
    Dialog(group = "switch"),
    Evaluate = true,
    HideResult = true,
    choices(checkBox = true));
  
  parameter Real dPqPdes= 0.0001
    "pressure drop ratio"
    annotation(
    Dialog(group = "Characteristic parameters"));
  
  //----- switches -----
  parameter PropulsionSystem.Types.switches.switch_dPqP_model switchModel_dPqP
      =PropulsionSystem.Types.switches.switch_dPqP_model.noInternalModel
    ""
    annotation(
    Dialog(group = "switch"),
    choicesAllMatching= true,   
    Evaluate = true,
    HideResult = true
    );
  
  parameter PropulsionSystem.Types.switches.switch_dPqP_input switchInput_dPqP
      =PropulsionSystem.Types.switches.switch_dPqP_input.use_desValue
   ""
    annotation(
    Dialog(group = "switch"),
    choicesAllMatching= true,   
    Evaluate = true,
    HideResult = true
    );
  
  
  //********** Internal variables **********
  Real dPqP(start= dPqPdes);
  Modelica.SIunits.PressureDifference dP;
  
  
  //********** Internal model **********
  /*
  PropulsionSystem.Subelements.dPqP_Wc2ndOrder Model_dPqP (redeclare package Medium = Medium)
    if dPqP_model_Wc2ndOrder 
    annotation(
    Placement(visible = true, transformation(origin = {4.44089e-16, -3.55271e-15}, extent = {{-24, -24}, {24, 24}}, rotation = 0)));
  */
  
  //********** Interfaces **********
  Modelica.Blocks.Interfaces.RealInput dPqP_in if use_dPqP_in annotation(
    Placement(visible = true, transformation(origin = {-80, -119}, extent = {{-19, -19}, {19, 19}}, rotation = 90), iconTransformation(origin = {-80, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  
  //********** Initialization **********
  //##### none #####
  //********** Protected objects **********
  //##### none #####
  /********************************************************
        Model coding
  ********************************************************/

equation
  //********** Geometries **********
  //##### none #####
  
  
  //********** Connections, interface <-> internal variables **********
  if (switchInput_dPqP==
      PropulsionSystem.Types.switches.switch_dPqP_input.use_inputSignal) then
    dPqP= dPqP_in;
  elseif (switchInput_dPqP==
          PropulsionSystem.Types.switches.switch_dPqP_input.use_desValue) then
    dPqP= dPqPdes;
  end if;
  
  
  //********** Eqns describing physics **********
  //-- pressure --
  dP= dPqP * fluid_I.p;
  fluid_O.p= fluid_I.p - dP;
  
  //-- mass conservation --
  port_a.m_flow + port_b.m_flow= 0;
  fluid_O.Xi= fluid_I.Xi;
  
  //-- energy conservation --
  (port_a.m_flow*fluid_I.h) + (port_b.m_flow*fluid_O.h)=0;
  
  
/********************************************************
  Graphics
********************************************************/
  
annotation(
    Icon(graphics = {Text(origin = {-4, -60}, extent = {{-66, 10}, {84, -20}}, textString = "%name"), Rectangle(origin = {0, -6}, fillColor = {211, 211, 211}, fillPattern = FillPattern.Solid, extent = {{-100, 46}, {100, -34}}), Rectangle(origin = {-98, 62}, fillColor = {147, 147, 147}, fillPattern = FillPattern.Solid, extent = {{-2, 34}, {2, -22}}), Rectangle(origin = {98, 62}, fillColor = {147, 147, 147}, fillPattern = FillPattern.Solid, extent = {{-2, 34}, {2, -22}}), Line(origin = {-87.3401, -33.9413}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {-72.8584, -33.8651}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {-58.6968, -34.4291}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {-43.5748, -34.0328}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {-28.4528, -33.9566}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {-13.9711, -34.2005}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {0.83073, -33.8042}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {15.6326, -33.728}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {30.7546, -33.6518}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {44.9162, -33.8957}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {59.0778, -33.4994}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {73.5595, -33.7433}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Line(origin = {87.8805, -33.6701}, points = {{-6.97745, -5.58397}, {1.02255, 6.41603}, {7.02255, -5.58397}}, thickness = 1), Text(origin = {5, 5}, extent = {{-45, 19}, {35, -11}}, textString = "dPqP")}, coordinateSystem(initialScale = 0.1)));
  
end Duct;
